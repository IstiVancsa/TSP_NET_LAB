// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/PostComment.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GRPCServer.Protos {
  public static partial class PostComment
  {
    static readonly string __ServiceName = "PostComment";

    static readonly grpc::Marshaller<global::GRPCServer.Protos.CommentEmptyModel> __Marshaller_CommentEmptyModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.Protos.CommentEmptyModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.Protos.PostEmptyModel> __Marshaller_PostEmptyModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.Protos.PostEmptyModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.Protos.CommentIdModel> __Marshaller_CommentIdModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.Protos.CommentIdModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.Protos.PostIdModel> __Marshaller_PostIdModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.Protos.PostIdModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.Protos.CommentFullModel> __Marshaller_CommentFullModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.Protos.CommentFullModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GRPCServer.Protos.PostFullModel> __Marshaller_PostFullModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GRPCServer.Protos.PostFullModel.Parser.ParseFrom);

    static readonly grpc::Method<global::GRPCServer.Protos.CommentEmptyModel, global::GRPCServer.Protos.CommentEmptyModel> __Method_AddComment = new grpc::Method<global::GRPCServer.Protos.CommentEmptyModel, global::GRPCServer.Protos.CommentEmptyModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddComment",
        __Marshaller_CommentEmptyModel,
        __Marshaller_CommentEmptyModel);

    static readonly grpc::Method<global::GRPCServer.Protos.PostEmptyModel, global::GRPCServer.Protos.PostEmptyModel> __Method_AddPost = new grpc::Method<global::GRPCServer.Protos.PostEmptyModel, global::GRPCServer.Protos.PostEmptyModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPost",
        __Marshaller_PostEmptyModel,
        __Marshaller_PostEmptyModel);

    static readonly grpc::Method<global::GRPCServer.Protos.CommentIdModel, global::GRPCServer.Protos.CommentEmptyModel> __Method_DeleteComment = new grpc::Method<global::GRPCServer.Protos.CommentIdModel, global::GRPCServer.Protos.CommentEmptyModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteComment",
        __Marshaller_CommentIdModel,
        __Marshaller_CommentEmptyModel);

    static readonly grpc::Method<global::GRPCServer.Protos.PostIdModel, global::GRPCServer.Protos.PostEmptyModel> __Method_DeletePost = new grpc::Method<global::GRPCServer.Protos.PostIdModel, global::GRPCServer.Protos.PostEmptyModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePost",
        __Marshaller_PostIdModel,
        __Marshaller_PostEmptyModel);

    static readonly grpc::Method<global::GRPCServer.Protos.CommentIdModel, global::GRPCServer.Protos.CommentFullModel> __Method_GetCommentById = new grpc::Method<global::GRPCServer.Protos.CommentIdModel, global::GRPCServer.Protos.CommentFullModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCommentById",
        __Marshaller_CommentIdModel,
        __Marshaller_CommentFullModel);

    static readonly grpc::Method<global::GRPCServer.Protos.PostIdModel, global::GRPCServer.Protos.PostFullModel> __Method_GetPostById = new grpc::Method<global::GRPCServer.Protos.PostIdModel, global::GRPCServer.Protos.PostFullModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPostById",
        __Marshaller_PostIdModel,
        __Marshaller_PostFullModel);

    static readonly grpc::Method<global::GRPCServer.Protos.CommentEmptyModel, global::GRPCServer.Protos.CommentFullModel> __Method_GetComments = new grpc::Method<global::GRPCServer.Protos.CommentEmptyModel, global::GRPCServer.Protos.CommentFullModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetComments",
        __Marshaller_CommentEmptyModel,
        __Marshaller_CommentFullModel);

    static readonly grpc::Method<global::GRPCServer.Protos.PostEmptyModel, global::GRPCServer.Protos.PostFullModel> __Method_GetPosts = new grpc::Method<global::GRPCServer.Protos.PostEmptyModel, global::GRPCServer.Protos.PostFullModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetPosts",
        __Marshaller_PostEmptyModel,
        __Marshaller_PostFullModel);

    static readonly grpc::Method<global::GRPCServer.Protos.CommentFullModel, global::GRPCServer.Protos.CommentEmptyModel> __Method_UpdateComment = new grpc::Method<global::GRPCServer.Protos.CommentFullModel, global::GRPCServer.Protos.CommentEmptyModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateComment",
        __Marshaller_CommentFullModel,
        __Marshaller_CommentEmptyModel);

    static readonly grpc::Method<global::GRPCServer.Protos.PostFullModel, global::GRPCServer.Protos.PostEmptyModel> __Method_UpdatePost = new grpc::Method<global::GRPCServer.Protos.PostFullModel, global::GRPCServer.Protos.PostEmptyModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePost",
        __Marshaller_PostFullModel,
        __Marshaller_PostEmptyModel);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GRPCServer.Protos.PostCommentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PostComment</summary>
    public partial class PostCommentClient : grpc::ClientBase<PostCommentClient>
    {
      /// <summary>Creates a new client for PostComment</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PostCommentClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PostComment that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PostCommentClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PostCommentClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PostCommentClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GRPCServer.Protos.CommentEmptyModel AddComment(global::GRPCServer.Protos.CommentEmptyModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCServer.Protos.CommentEmptyModel AddComment(global::GRPCServer.Protos.CommentEmptyModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddComment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.CommentEmptyModel> AddCommentAsync(global::GRPCServer.Protos.CommentEmptyModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.CommentEmptyModel> AddCommentAsync(global::GRPCServer.Protos.CommentEmptyModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddComment, null, options, request);
      }
      public virtual global::GRPCServer.Protos.PostEmptyModel AddPost(global::GRPCServer.Protos.PostEmptyModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCServer.Protos.PostEmptyModel AddPost(global::GRPCServer.Protos.PostEmptyModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddPost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.PostEmptyModel> AddPostAsync(global::GRPCServer.Protos.PostEmptyModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.PostEmptyModel> AddPostAsync(global::GRPCServer.Protos.PostEmptyModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddPost, null, options, request);
      }
      public virtual global::GRPCServer.Protos.CommentEmptyModel DeleteComment(global::GRPCServer.Protos.CommentIdModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCServer.Protos.CommentEmptyModel DeleteComment(global::GRPCServer.Protos.CommentIdModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteComment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.CommentEmptyModel> DeleteCommentAsync(global::GRPCServer.Protos.CommentIdModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.CommentEmptyModel> DeleteCommentAsync(global::GRPCServer.Protos.CommentIdModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteComment, null, options, request);
      }
      public virtual global::GRPCServer.Protos.PostEmptyModel DeletePost(global::GRPCServer.Protos.PostIdModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCServer.Protos.PostEmptyModel DeletePost(global::GRPCServer.Protos.PostIdModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.PostEmptyModel> DeletePostAsync(global::GRPCServer.Protos.PostIdModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.PostEmptyModel> DeletePostAsync(global::GRPCServer.Protos.PostIdModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePost, null, options, request);
      }
      public virtual global::GRPCServer.Protos.CommentFullModel GetCommentById(global::GRPCServer.Protos.CommentIdModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommentById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCServer.Protos.CommentFullModel GetCommentById(global::GRPCServer.Protos.CommentIdModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCommentById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.CommentFullModel> GetCommentByIdAsync(global::GRPCServer.Protos.CommentIdModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommentByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.CommentFullModel> GetCommentByIdAsync(global::GRPCServer.Protos.CommentIdModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCommentById, null, options, request);
      }
      public virtual global::GRPCServer.Protos.PostFullModel GetPostById(global::GRPCServer.Protos.PostIdModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPostById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCServer.Protos.PostFullModel GetPostById(global::GRPCServer.Protos.PostIdModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPostById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.PostFullModel> GetPostByIdAsync(global::GRPCServer.Protos.PostIdModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPostByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.PostFullModel> GetPostByIdAsync(global::GRPCServer.Protos.PostIdModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPostById, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::GRPCServer.Protos.CommentFullModel> GetComments(global::GRPCServer.Protos.CommentEmptyModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetComments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GRPCServer.Protos.CommentFullModel> GetComments(global::GRPCServer.Protos.CommentEmptyModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetComments, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::GRPCServer.Protos.PostFullModel> GetPosts(global::GRPCServer.Protos.PostEmptyModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPosts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::GRPCServer.Protos.PostFullModel> GetPosts(global::GRPCServer.Protos.PostEmptyModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetPosts, null, options, request);
      }
      public virtual global::GRPCServer.Protos.CommentEmptyModel UpdateComment(global::GRPCServer.Protos.CommentFullModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCServer.Protos.CommentEmptyModel UpdateComment(global::GRPCServer.Protos.CommentFullModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateComment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.CommentEmptyModel> UpdateCommentAsync(global::GRPCServer.Protos.CommentFullModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.CommentEmptyModel> UpdateCommentAsync(global::GRPCServer.Protos.CommentFullModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateComment, null, options, request);
      }
      public virtual global::GRPCServer.Protos.PostEmptyModel UpdatePost(global::GRPCServer.Protos.PostFullModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GRPCServer.Protos.PostEmptyModel UpdatePost(global::GRPCServer.Protos.PostFullModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.PostEmptyModel> UpdatePostAsync(global::GRPCServer.Protos.PostFullModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GRPCServer.Protos.PostEmptyModel> UpdatePostAsync(global::GRPCServer.Protos.PostFullModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePost, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PostCommentClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PostCommentClient(configuration);
      }
    }

  }
}
#endregion
